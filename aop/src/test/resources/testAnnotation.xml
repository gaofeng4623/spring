<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns:context="http://www.fmd.com"
		xmlns:aop="http://www.fmd.com.cn"
		default-lazy-init="false">
	<bean id="impl" class="test.DaoImpl">
		<property name="name">
			<value>张三</value>
		</property>
		<property name="url" value="http://192.168.1.11:8080" />
	</bean>

	<bean id="service" class="test.ServiceImpl" destroy-method="close"
		  init-method="init">
		<property name="dao" ref="impl"></property>
	</bean>

	<!-- 加载jdbc资源文件 -->
	<properties id="jdbc" location="classpath:jdbc.properties"/>

	<!-- 定义数据源 -->
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="url" value="#{jdbc.url}"/>
		<property name="driverClassName" value="#{jdbc.driver}"/>
		<property name="username" value="#{jdbc.user}"/>
		<property name="password" value="#{jdbc.password}"/>
	</bean>


	<!-- 通过工厂静态方法得到 -->
	<bean id="factory1" class="test.ceshi.Factory" factory-method="createInstance" />

	<!-- 通过工厂对象方法得到 -->
	<bean id="factory2" factory-bean="factory" factory-method="createInstance2" />

	<bean id="factory" class="test.ceshi.Factory" />


	<bean id="aopMethodBeforeInterceptor" class="com.spring.aop.common.xml.advisor.NameMatchMethodPiontcutAdvisor">
		<property name="advice">
			<bean class="test.MethodBeforeImpl"></bean>
		</property>
		<property name="mappedName" value="*Test"></property>
	</bean>

	<bean id="aopMethodAfterInterceptor" class="com.spring.aop.common.xml.advisor.NameMatchMethodPiontcutAdvisor">
		<property name="advice">
			<bean class="test.MethodAfterImpl"></bean>
		</property>
		<property name="mappedName" value="*Test"></property>
	</bean>

	<bean id="aopService" class="com.spring.aop.proxy.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>aopMethodBeforeInterceptor</value>
				<value>aopMethodAfterInterceptor</value>
			</list>
		</property>
		<property name="target">
			<bean class="test.ServiceImpl2">
				<property name="dao" ref="impl" />
			</bean>
		</property>
	</bean>

	<!-- 开启IOC注解扫描 -->
	<component-scan base-package="test.anno" />

	<!-- 开启AOP注解扫描 -->
	<aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>