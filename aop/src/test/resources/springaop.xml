<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true">
	<bean id="impl" class="test.DaoImpl">
		<property name="name">
			<value>张三</value>
		</property>
		<property name="url" value="http://192.168.1.11:8080" />
	</bean>
	
	<bean id="service" class="test.ServiceImpl" destroy-method="close"
		init-method="init">
		<property name="dao" ref="impl"></property>
	</bean>
	
	<bean id="myadvice" class="test.aop.MyAdvice"/>
	<bean id="myPointcut" class="test.aop.MyPointcut"/>
	<bean class="com.spring.aop.common.xml.advisor.DefaultPointcutAdvisor">
		<property name="advice" ref="myadvice"/>
		<property name="pointcut" ref="myPointcut"/>
	</bean>

	<bean id="namecut" class="com.spring.aop.common.xml.pointcut.NameMatchMethodPointcut">
		<property name="mappedNames">
			<list>
				<value>*run</value>
				<value>test*</value>
			</list>
		</property>
	</bean>
	
	<bean id="regxcut" class="com.spring.aop.common.xml.pointcut.RegexpMethodPointcut">
		<property name="patterns">
			<list>
				<value>.*run</value>
				<value>.*test.*</value>
			</list>
		</property>
	</bean>
	
	<bean id="defaultAdvisor" class="com.spring.aop.common.xml.advisor.DefaultPointcutAdvisor">
		<property name="advice">
			<bean class="test.MethodBeforeImpl"></bean>
		</property>
		<property name="pointcut" ref="regxcut"></property>
	</bean> 
	
	<bean id="regxAdvisor" class="com.spring.aop.common.xml.advisor.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<bean class="test.MethodAfterImpl"></bean>
		</property>
		<property name="patterns">
			<list>
				<value>.*test.*</value>
			</list>
		</property>
	</bean>
	
	<bean id="nameAdvisor" class="com.spring.aop.common.xml.advisor.NameMatchMethodPiontcutAdvisor">
		<property name="advice">
			<bean class="test.MethodAfterImpl"></bean>
		</property>
		<property name="pointcut" ref="namecut"></property>
	</bean>
	
	<bean id="aopService" class="com.spring.aop.proxy.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>defaultAdvisor</value>
				<value>regxAdvisor</value>
				<value>nameAdvisor</value>
			</list>
		</property>
		<property name="target">
			<bean class="test.bean.BigDog" />
		</property>
	</bean>
	
	<!-- 以下配置是自动代理 -->
	<bean id="advice" class="test.MethodBeforeImpl" />
	<bean id="aroundAdvice" class="test.aop.AroundAdvice"/>
	<bean id="aroundAdvice2" class="test.aop.AroundAdvice2"/>
	
		
	<bean id="nameAdvisor2" class="com.spring.aop.common.xml.advisor.NameMatchMethodPiontcutAdvisor">
		<property name="advice">
			<ref bean="aroundAdvice2"/>
		</property>
		<property name="pointcut" ref="namecut"/>
	</bean>
	
	<bean id="autoregxAdvisor" class="com.spring.aop.common.xml.advisor.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="aroundAdvice"/>
		</property>
		<property name="patterns">
			<list>
				<value>tesbean.*Dog.test.*</value>
			</list>
		</property>
	</bean>
	<!-- 测试日志切面功能 -->
	<bean id="throwAdvisor" class="com.spring.aop.common.xml.advisor.NameMatchMethodPiontcutAdvisor">
		<property name="advice">
			<bean class="test.aop.ThrowAdviceTest"></bean>
		</property>
		<property name="mappedName" value="testDog"/>
	</bean>
	
	<bean id="autoproxy" class="com.spring.aop.proxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<value>*</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>autoregxAdvisor</value>
				<value>throwAdvisor</value>
			</list>
		</property>
		<!-- <property name="proxyTargetClass" value="true" /> -->
	</bean>
	<!-- beanName关联测试的类 -->
	<bean id="bigDog" class="test.bean.BigDog"/>
	<bean id="smallDog" class="test.bean.SmallDog" />
	
</beans>